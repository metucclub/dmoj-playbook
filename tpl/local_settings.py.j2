# coding: utf-8

#####################################
########## Django settings ##########
#####################################

## Bridge controls.
# The judge connection address and port; where the judges will connect to the site.
# You should change this to something your judges can actually connect to 
# (e.g., a port that is unused and unblocked by a firewall).
BRIDGED_JUDGE_ADDRESS = [('{{ webserver_internal_ip }}', 9999)]
SECRET_KEY = "{{ django_secret_key }}"
DATABASES = {
     'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'dmoj',
        'USER': 'dmoj',
        'PASSWORD': '{{ db_passwd }}',
        'HOST': '127.0.0.1',
        'OPTIONS': {
            'charset': 'utf8',
            'sql_mode': 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION',
        },
    }
}

DEBUG = False  # Change to False once you are done with runserver testing.

## DMOJ site display settings.
SITE_NAME = u'CClub Yarışma Arşivi'
SITE_LONG_NAME = u'CClub Yarışma Arşivi'
SITE_ADMIN_EMAIL = 'cclub@metu.edu.tr'
TERMS_OF_SERVICE_URL = '//dmoj.ca/tos' # Use a flatpage. XXX: make our own terms of service

# Uncomment and set to the domain names this site is intended to serve.
# You must do this once you set DEBUG to False.
ALLOWED_HOSTS = ["{{ server_name }}"]

# Optional apps that DMOJ can make use of.
INSTALLED_APPS += (
    'django_select2', # Searchable comboboxes.
)

# Caching. You can use memcached or redis instead.
# Documentation: <https://docs.djangoproject.com/en/1.11/topics/cache/>
CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.locmem.LocMemCache'
    }
}

# Sessions.
# Documentation: <https://docs.djangoproject.com/en/1.11/topics/http/sessions/>
#SESSION_ENGINE = 'django.contrib.sessions.backends.cached_db'

## django-compressor settings, for speeding up page load times by minifying CSS and JavaScript files.
# Sass is supposed to be compiled by 'npm run build:css`.
# Documentation: https://django-compressor.readthedocs.io/en/latest/
# https://github.com/Fueled/django-init/wiki/SASS-support-using-django-compressor
COMPRESS_CSS_FILTERS = [
    'compressor.filters.css_default.CssAbsoluteFilter',
    'compressor.filters.cssmin.CSSMinFilter',
]

COMPRESS_JS_FILTERS = ['compressor.filters.jsmin.JSMinFilter']

COMPRESS_OUTPUT_DIR = 'cache'
COMPRESS_STORAGE = 'compressor.storage.GzipCompressorFileStorage'
STATICFILES_FINDERS += (
	'compressor.finders.CompressorFinder',
)

USE_RECAPTCHA = False
RECAPTCHA_PUBLIC_KEY = ""
RECAPTCHA_PRIVATE_KEY = ""
if USE_RECAPTCHA: INSTALLED_APPS += ("snowpenguin.django.recaptcha2",)

USE_MAILGUN = False
MAILGUN_API_KEY = ""
MAILGUN_SENDER_DOMAIN = ""
if USE_MAILGUN:
	EMAIL_BACKEND = "anymail.backends.mailgun.EmailBackend"
	DEFAULT_FROM_EMAIL = u"{name} <noreply@{domain}>".format(name=SITE_NAME, domain=MAILGUN_SENDER_DOMAIN)
else:
	EMAIL_BACKEND = "django.core.mail.backends.console.EmailBackend" # Useful for testing.


ADMINS = ("cclub@metu.edu.tr",)

# The sender for the admin error email.
SERVER_EMAIL = 'Don Mills Online Judge <errors@dmoj.ca>'

##################################################
########### Static files configuration. ##########
##################################################
# See <https://docs.djangoproject.com/en/1.11/howto/static-files/>.

# Change this to somewhere more permanent., especially if you are using a 
# webserver to serve the static files. This is the directory where all the 
# static files DMOJ uses will be collected to.
# You must configure your webserver to serve this directory as /static/ in production.
STATIC_ROOT = '{{ APP_DIR }}/static'

# URL to access static files.
#STATIC_URL = '/static/'

# Uncomment to use hashed filenames with the cache framework.
#STATICFILES_STORAGE = 'django.contrib.staticfiles.storage.CachedStaticFilesStorage'

############################################
########## DMOJ-specific settings ##########
############################################

## DMOJ site display settings.
SITE_NAME = 'lopamp'
SITE_LONG_NAME = u'ODTÜ Bilgisayar Topluluğu Programlama Yarışması'
SITE_ADMIN_EMAIL = 'admin@example.com'
TERMS_OF_SERVICE_URL = '//dmoj.ca/tos' # Use a flatpage. XXX: make our own terms of service

## DMOJ features.
# Set to True to enable full-text searching for problems.
ENABLE_FTS = True

# Set of email providers to ban when a user registers, e.g., {'throwawaymail.com'}.
BAD_MAIL_PROVIDERS = set()

## Event server.
# Uncomment to enable live updating.
EVENT_DAEMON_USE = True

EVENT_DAEMON_POST = 'ws://127.0.0.1:15101/'

# Using our standard nginx configuration, these should be.
EVENT_DAEMON_GET = 'ws://{{ ansible_eth0.ipv4.address }}/event/'
EVENT_DAEMON_GET_SSL = 'wss://{{ ansible_eth0.ipv4.address }}/event/'
EVENT_DAEMON_POLL = '/channels/'

## CDN control.
# Base URL for a copy of ace editor.
# Should contain ace.js, along with mode-*.js.
ACE_URL = '//cdnjs.cloudflare.com/ajax/libs/ace/1.2.3/'
JQUERY_JS = '//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js'
SELECT2_JS_URL = '//cdnjs.cloudflare.com/ajax/libs/select2/4.0.3/js/select2.min.js'
SELECT2_CSS_URL = '//cdnjs.cloudflare.com/ajax/libs/select2/4.0.3/css/select2.min.css'

# A map of Earth in Equirectangular projection, for timezone selection.
# Please try not to hotlink this poor site.
TIMEZONE_MAP = 'http://naturalearth.springercarto.com/ne3_data/8192/textures/3_no_ice_clouds_8k.jpg'

## Camo (https://github.com/atmos/camo) usage.
#CAMO_URL = "<URL to your camo install>"
#CAMO_KEY = "<The CAMO_KEY environmental variable you used>"

# Domains to exclude from being camo'd.
#CAMO_EXCLUDE = ("https://dmoj.ml", "https://dmoj.ca")

# Set to True to use https when dealing with protocol-relative URLs.
# See <http://www.paulirish.com/2010/the-protocol-relative-url/> for what they are.
#CAMO_HTTPS = False

# HTTPS level. Affects <link rel='canonical'> elements generated.
# Set to 0 to make http URLs canonical.
# Set to 1 to make the currently used protocol canonical.
# Set to 2 to make https URLs canonical.
#DMOJ_HTTPS = 0

## PDF rendering settings.
# Directory to cache the PDF.
#PROBLEM_PDF_CACHE = '/home/dmoj-uwsgi/pdfcache'

# Path to use for nginx's X-Accel-Redirect feature.
# Should be an internal location mapped to the above directory.
#PROBLEM_PDF_INTERNAL = '/pdfcache'

# Path to a PhantomJS executable.
#PHANTOMJS = '/usr/local/bin/phantomjs'

# If you can't use PhantomJS or prefer wkhtmltopdf, set the path to wkhtmltopdf executable instead.
#WKHTMLTOPDF = '/usr/local/bin/wkhtmltopdf'

# Note that PhantomJS is preferred over wkhtmltopdf and would be used when both are defined.

## ======== Logging Settings ========
# Documentation: https://docs.djangoproject.com/en/1.9/ref/settings/#logging
#                https://docs.python.org/2/library/logging.config.html#logging-config-dictschema
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'file': {
            'format': '%(levelname)s %(asctime)s %(module)s %(message)s',
        },
        'simple': {
            'format': '%(levelname)s %(message)s',
        },
    },
    'handlers': {
        # You may use this handler as example for logging to other files..
        'bridge': {
            'level': 'INFO',
            'class': 'logging.handlers.RotatingFileHandler',
            'filename': '{{ HOME }}/yarisma.log',
            'maxBytes': 10 * 1024 * 1024,
            'backupCount': 10,
            'formatter': 'file',
        },
        'mail_admins': {
            'level': 'ERROR',
            'class': 'dmoj.throttle_mail.ThrottledEmailHandler',
        },
        'console': {
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
            'formatter': 'file',
        },
    },
    'loggers': {
        # Site 500 error mails.
        'django.request': {
            'handlers': ["bridge", 'mail_admins'],
            'level': 'ERROR',
            'propagate': True,
        },
        # Judging logs as received by bridged.
        'judge.bridge': {
            'handlers': ['bridge', 'mail_admins'],
            'level': 'INFO',
            'propagate': True,
        },
        # Catch all log to stderr.
        '': {
            'handlers': ['console'],
        },
        # Other loggers of interest. Configure at will.
        #  - judge.user: logs naughty user behaviours.
        #  - judge.problem.pdf: PDF generation log.
        #  - judge.html: HTML parsing errors when processing problem statements etc.
        #  - judge.mail.activate: logs for the reply to activate feature.
        #  - event_socket_server
    },
}

## ======== Custom Configuration ========
# You may add whatever django configuration you would like here.
# Do try to keep it separate so you can quickly patch in new settings.

